@startuml CreateNoteScreenVM - Sequence - Pseudo
!define POSITIVERESPONSE 90EE90

!define NEGATIVEERESPONSE EFBBBB

!define NUETRALRESPONSE F2DC79

skinparam sequence{
    ParticipantBackgroundColor #A7BEAE

    LifeLineBackgroundColor #E7E8D1

    LifeLineBorderColor #2C5F2D

    ActorBackgroundColor #FC766AFF

    ActorBorderColor #FC766AFF

    ArrowColor #B85042

    ArrowFontColor #234E70

}


title CreateNoteScreenVM - createNoteInService()
autonumber 1
hide footbox
Caller -> CreateNoteScreenVM : Invoke **createNoteInService()**
activate Caller
activate CreateNoteScreenVM
alt #POSITIVERESPONSE (TRY)
    CreateNoteScreenVM -> CreateNoteScreenVM : Assign and increment the @id
    CreateNoteScreenVM -> CreateNoteScreenVM : In the variable **instanceOfNotesBO** pass the instance of **NotesBO** and pass the value of **@id** , **@title** and **@description** to it
    CreateNoteScreenVM -> CreateNoteScreenVM : In the variable **@listOfNotesBO** add the **instanceOfNotesBO**
    CreateNoteScreenVM -> PlatformSharedPreferenceService : Invoke **createNote(key: String, value: List<NotesBO>)**
    activate PlatformSharedPreferenceService
    PlatformSharedPreferenceService --> CreateNoteScreenVM : Returns the **serviceResult<bool>**
    deactivate PlatformSharedPreferenceService 
    CreateNoteScreenVM -> CreateNoteScreenVM : Set the **serviceResult<bool>** to a variable **response**
    alt #POSITIVERESPONSE (response.content == true)
        CreateNoteScreenVM -> CreateNoteScreenVM : Invoke **navigateToSuccessScreen()**
        CreateNoteScreenVM --> Caller : Returns
    else #NEGATIVEERESPONSE
        CreateNoteScreenVM -> CreateNoteScreenVM : Set the status code and status of page to **@pageStatus** 
        CreateNoteScreenVM -> CreateNoteScreenVM :Invoke **navigateToFailureScreen()**
        CreateNoteScreenVM --> Caller : Returns 
    end
    deactivate PlatformSharedPreferenceService 

else #NEGATIVEERESPONSE (CATCH)
    CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
    activate Utilities
    Utilities --> CreateNoteScreenVM : Returns
    deactivate Utilities
        CreateNoteScreenVM -> CreateNoteScreenVM : Set the status code and status of page to **@pageStatus** 
        CreateNoteScreenVM -> CreateNoteScreenVM : Invoke **navigateToFailureScreen()** 
        CreateNoteScreenVM --> Caller : Returns 
    deactivate CreateNoteScreenVM
    deactivate Caller
end

==PSEUDOCODE==
hnote across 
    **TRY** 

        INCREMENT by one and assign it as the value of **@id**

        SET the value of **@id** , **@title** and **@description** in the instance of BO and assign the instance in a variable **instanceOfNotesBO**

        SET the value of **instanceOfNotesBO** to the **@listOfNotesBO**

        INVOKE **createNote(key: String, value: List<NotesBO>)** in the **PlatformSharedPreferenceService**, where **"1"** is passed as key and **@listOfNotesBO** is passed as value 

        SET the **serviceResult<bool>** to the variable **response** 

        **IF (response.content == true)**

            INVOKE **navigateToSuccessScreen()**
        
        **ELSE** 

            SET the **response.statuscode** as key and **"Creation"** as value to the variable **@pageStatus**

            INVOKE **navigateToFailureScreen()** 

    **CATCH** 

        INVOKE **writeExceptionData()**

        SET the **response.statuscode** as key and **"Creation"** as value to the variable **@pageStatus**

        INVOKE **navigateToFailureScreen()** 
end hnote

newpage CreateNoteScreenVM - navigateToSuccessScreen() 
autonumber 1
hide footbox 
Caller -> CreateNoteScreenVM : Invoke **navigateToSuccessScreen()** 
activate Caller 
activate CreateNoteScreenVM 
alt #POSITIVERESPONSE (TRY)
CreateNoteScreenVM -> CreateNoteScreenVM : Push the **NoteCreatedSuccessScreen.pageconfig** as config in navigation stream
CreateNoteScreenVM --> Caller : Returns 
else #NEGATIVEERESPONSE (CATCH)
CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
activate Utilities 
Utilities --> CreateNoteScreenVM : Returns 
deactivate Utilities
CreateNoteScreenVM --> Caller : Returns 
deactivate CreateNoteScreenVM 
deactivate Caller
end

==PSEUDOCODE== 
hnote across 
    **TRY**

        ADD the event **navigatorPush** to the **navigationStream** with the **NoteCreatedSuccessScreen.pageconfig** as config and **@pageStatus** as extradata in navigation stream 
    
    **CATCH** 

        INVOKE **writeExceptionData()**
end hnote 

newpage CreateNoteScreenVM - navigateToHomeScreen()
autonumber 1
hide footbox 
Caller -> CreateNoteScreenVM : Invoke **navigateToHomeScreen()**
activate Caller 
activate CreateNoteScreenVM 
alt #POSITIVERESPONSE (TRY)
CreateNoteScreenVM -> CreateNoteScreenVM :  Add the event **navigatorPop** to the **navigationStream**
CreateNoteScreenVM --> Caller : Returns 
else #NEGATIVEERESPONSE (CATCH)
CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
activate Utilities 
Utilities --> CreateNoteScreenVM : Returns 
deactivate Utilities
CreateNoteScreenVM --> Caller : Returns
deactivate CreateNoteScreenVM 
deactivate Caller 
end

==PSEUDOCODE== 
hnote across 
    **TRY**
        
        ADD the event **navigatorPush** to the **navigationStream** with the **HomeScreen.pageconfig** as config
    
    **CATCH** 

        INVOKE **writeExceptionData()**
end hnote 

newpage CreateNoteScreenVM - navigateToFailureScreen() 
autonumber 1
hide footbox 
Caller -> CreateNoteScreenVM : Invoke **navigateToFailureScreen()** 
activate Caller 
activate CreateNoteScreenVM 
alt #POSITIVERESPONSE (TRY)
CreateNoteScreenVM -> CreateNoteScreenVM : Push the **ProcessFailedScreen.pageconfig** as config with **@pageStatus** as extradata in navigation stream
CreateNoteScreenVM --> Caller : Returns 
else #NEGATIVEERESPONSE (CATCH)
CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
activate Utilities 
Utilities --> CreateNoteScreenVM : Returns 
deactivate Utilities
CreateNoteScreenVM --> Caller : Returns
deactivate CreateNoteScreenVM 
deactivate Caller 
end 

==PSEUDOCODE== 
hnote across 
    **TRY**
        
        ADD the event **navigatorPush** to the **navigationStream** with the **ProcessFailedScreen.pageconfig** as config and **@pageStatus** as extradata
    
    **CATCH** 

        INVOKE **writeExceptionData()**
end hnote 

newpage CreateNoteScreenVM - onChangeTitle()
autonumber 1
hide footbox
Caller -> CreateNoteScreenVM : Invoke **onChangeTitle(title : String)**
activate Caller
activate CreateNoteScreenVM
alt #POSITIVERESPONSE (TRY)
CreateNoteScreenVM -> CreateNoteScreenVM : Add the **title** to the **titleFieldController** stream
CreateNoteScreenVM -> CreateNoteScreenVM : Set the value got from the method's parameter to the variable **@title**
CreateNoteScreenVM --> Caller : Returns
else #NEGATIVEERESPONSE (CATCH)
CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
activate Utilities 
Utilities --> CreateNoteScreenVM : Returns 
deactivate Utilities
CreateNoteScreenVM --> Caller : Returns
deactivate CreateNoteScreenVM
deactivate Caller
end

==PSEUDOCODE==
hnote across
    **TRY**

        ADD the **title** from the parameter to the event of the stream **titleFieldController**

        SET the value of the parameter **title** to the variable **title**
    
    **CATCH** 

        INVOKE **writeExceptionData()**
end hnote

newpage CreateNoteScreenVM - onChangeDescription()
autonumber 1
hide footbox
Caller -> CreateNoteScreenVM : Invoke **onChangeDescription(description : String)**
activate Caller
activate CreateNoteScreenVM
alt #POSITIVERESPONSE (TRY)
CreateNoteScreenVM -> CreateNoteScreenVM : Add the **description** to the **descriptionFieldController** stream
CreateNoteScreenVM -> CreateNoteScreenVM : Set the value got from the method's parameter to the variable **@description**
CreateNoteScreenVM --> Caller : Returns
else #NEGATIVEERESPONSE (CATCH)
CreateNoteScreenVM -> Utilities : Invoke **writeExceptionData()**
activate Utilities 
Utilities --> CreateNoteScreenVM : Returns 
deactivate Utilities
CreateNoteScreenVM --> Caller : Returns
deactivate CreateNoteScreenVM
deactivate Caller
end 

==PSEUDOCODE==
hnote across
    **TRY**

        ADD the **description** from the parameter to the event of the stream **descriptionFieldController**

        SET the value of the parameter **description** to the variable **description**
    
    **CATCH** 

        INVOKE **writeExceptionData()**
end hnote